{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/ImageGallery/ImageGallery.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Modal/Modal.js","Services/Api.js","App.js","index.js"],"names":["SearchBar","onSubmit","useState","searchWord","setSearchWord","reset","className","evt","preventDefault","type","onChange","target","value","autoComplete","autoFocus","placeholder","ImageGallery","children","ImageGalleryItem","pictureId","srcWebformat","onClick","src","alt","Button","modalRoot","document","getElementById","Modal","toggleModal","handleKeyDown","e","code","useEffect","window","addEventListener","removeEventListener","createPortal","currentTarget","axios","defaults","baseURL","request","currentPage","pageSize","get","then","response","data","hits","App","pictures","setPictures","setRequest","setCurrentPage","largeImageURL","setLargeImageURL","isModalOpen","setIsModalOpen","isLoading","setIsLoading","setError","fatchPictures","scrollTo","top","documentElement","scrollHeight","behavior","option","api","picturesArr","catch","error","finally","prevState","shouldRenderLoadMoreButton","length","query","map","id","webformatURL","color","height","width","timeout","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5660f34c.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport './SearchBar.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchBar = ({ onSubmit }) => {\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n\r\n  const inputChangeHandler = (evt) => {\r\n    setSearchWord(evt.target.value);\r\n  };\r\n\r\n  const formSubmitHandler = (evt) => {\r\n    evt.preventDefault();\r\n    onSubmit(searchWord);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setSearchWord(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={formSubmitHandler}>\r\n          <button type=\"submit\" className=\"SearchFormButton\">\r\n            <span className=\"SearchFormButtonLabel\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={inputChangeHandler}\r\n            className=\"SearchFormInput\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={searchWord}\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default SearchBar;","import './imageGallery.css';\r\n\r\n\r\nconst ImageGallery = ({ children }) => {\r\n  return <ul className=\"ImageGallery\">{children}</ul>;\r\n};\r\n\r\nexport default ImageGallery;\r\n","import './ImageGalleryItem.css';\r\n\r\nconst ImageGalleryItem = ({ pictureId, srcWebformat, onClick }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={onClick}>\r\n      <img src={srcWebformat} alt=\"\" className=\"ImageGalleryItemImage\" />\r\n    </li>\r\n  );\r\n};\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" onClick={onClick} className=\"Button\">\r\n    Load more\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import './Modal.css';\r\nimport { useEffect } from 'react';\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\");\r\n\r\nconst Modal = ({ toggleModal, children }) => {\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div onClick={handleBackdropClick} className=\"Overlay\">\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\nexport default Modal;","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst API_KEY = '21893173-2e6903a6fb362f8aa14208207';\r\n\r\nconst fatchPictures = ({ request = \"\", currentPage = 1, pageSize = 12 }) => {\r\n  return axios\r\n    .get(\r\n      `/?key=${API_KEY}&q=${request}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=${pageSize}`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nexport default { fatchPictures };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport SearchBar from './Components/SearchBar';\r\nimport ImageGallery from \"./Components/ImageGallery\";\r\nimport ImageGalleryItem from \"./Components/ImageGalleryItem\";\r\nimport Button from \"./Components/Button\";\r\nimport Modal from \"./Modal\";\r\nimport api from \"./Services/Api\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst App = () => {\r\n  const [pictures, setPictures] = useState([]);\r\n  const [request, setRequest] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [largeImageURL, setLargeImageURL] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!request) {\r\n      return;\r\n    }\r\n    fatchPictures();\r\n  }, [request]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [pictures]);\r\n\r\n  const onChangeRequest = (query) => {\r\n    setPictures([]);\r\n    setRequest(query);\r\n    setCurrentPage(1);\r\n    setError(null);\r\n  };\r\n\r\n  const fatchPictures = () => {\r\n    const option = { request, currentPage };\r\n    setIsLoading(true);\r\n    api\r\n      .fatchPictures(option)\r\n      .then(\r\n        (picturesArr) => setPictures([...pictures, ...picturesArr]),\r\n        setCurrentPage(currentPage + 1)\r\n      )\r\n      .catch((error) => setError(error))\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const onPictureClick = (url) => {\r\n    setLargeImageURL(url);\r\n    toggleModal();\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setIsModalOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const shouldRenderLoadMoreButton = pictures.length > 0 && !isLoading;\r\n  return (\r\n    <>\r\n      <SearchBar onSubmit={onChangeRequest}></SearchBar>\r\n\r\n      <ImageGallery>\r\n        {pictures.map(({ id, webformatURL, largeImageURL }) => (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            srcWebformat={webformatURL}\r\n            pictureId={id}\r\n            onClick={() => onPictureClick(largeImageURL)}\r\n          />\r\n        ))}\r\n      </ImageGallery>\r\n      {isModalOpen && (\r\n        <Modal toggleModal={toggleModal}>\r\n          <img src={largeImageURL} alt=\"\" />\r\n        </Modal>\r\n      )}\r\n      {isLoading && (\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      )}\r\n      {shouldRenderLoadMoreButton && <Button onClick={fatchPictures} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n\r\n"],"sourceRoot":""}